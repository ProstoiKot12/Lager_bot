import re
import time

from aiogram.types import Message, CallbackQuery
from random import randint

from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from request.sql_request import insert_table_data, insert_children_character, read_us_id_user_table, \
                                read_us_id_points_table, read_points
from keyboards.user_keyboards import character_test_kb, return_kb, main_menu_kb


class Form(StatesGroup):
    test_state_1 = State()
    test_state_2 = State()
    test_state_3 = State()
    test_state_4 = State()

    character_test_1 = State()
    character_test_2 = State()
    character_test_3 = State()
    character_test_4 = State()
    character_test_5 = State()
    character_test_6 = State()
    character_test_7 = State()
    character_test_8 = State()
    character_test_9 = State()
    character_test_10 = State()
    character_test_11 = State()
    character_test_12 = State()
    character_test_13 = State()
    character_test_14 = State()
    character_test_15 = State()
    character_test_16 = State()
    character_test_17 = State()
    character_test_18 = State()
    character_test_19 = State()


user_id: int
user_name: str
children_surname: str
children_name: str
children_patronymic: str
children_year: int
children_room_number: int
test_points_yes = 0
test_points_probably_yes = 0
test_points_no = 0

async def authenticated_test_name(call: CallbackQuery, state: FSMContext):
    await call.answer('')

    testing = await read_us_id_user_table(call.from_user.id)

    if testing == True:
        await call.message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –§–ò–û:\n\n"
                                  "‚úÖ–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á\n\n"
                                  "‚ùå—ã—Ñ—Ñ23–¥–ª—å–∑—ã")
        await state.set_state(Form.test_state_1)
    elif testing == False:
        await call.message.answer("–í—ã —É–∂–µ –∏–Ω–¥–µ—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª–∏ —Å–µ–±—è")

async def test_state_1(message: Message, state: FSMContext):
    try:
        global user_id, user_name, children_name, children_surname, children_patronymic

        user_id = message.from_user.id
        user_name = f'@{message.from_user.username}'
        name_parts = message.text.split()
        children_surname = name_parts[0]
        children_name = name_parts[1]
        children_patronymic = name_parts[2]

        if len(name_parts) != 3:
            raise ValueError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –§–ò–û')

        name_pattern = re.compile(r'^[–ê-–Ø–Å–∞-—è—ë]+$')
        if not all(name_pattern.match(name) for name in name_parts):
            raise ValueError('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –§–ò–û')

        await message.answer('–•–æ—Ä–æ—à–æ üëç, —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–æ —Å–∫–æ–ª—å–∫–æ –≤–∞–º –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç:\n\n'
                             '‚úÖ14\n\n'
                             '‚ùå12312978')

        await state.set_state(Form.test_state_2)
    except:
        await message.answer('–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –§–ò–û üò°')

async def test_state_2(message: Message, state: FSMContext):
    try:
        age = int(message.text.strip())

        if age <= 90:
            global children_year
            children_year = message.text.strip()
            await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã')
            await state.set_state(Form.test_state_3)
        else:
            await message.answer('–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç üò°')
    except ValueError:
        await message.answer('–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç üò°')

async def test_state_3(message: Message, state: FSMContext):
    try:
        global children_room_number
        children_room_number = message.text

        if not children_room_number.isdigit():
            await message.answer('–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–æ–º–Ω–∞—Ç—ã üò°')
            return

        await message.answer('–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 81234567890')
        await state.set_state(Form.test_state_4)
    except:
        await message.answer('–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ—ë –∫–æ–º–Ω–∞—Ç—ã üò°')

def format_phone_number(phone_number):
    digits = ''.join(filter(str.isdigit, phone_number))

    if len(digits) != 11:
        return phone_number

    country_code = digits[1:4]
    first_part = digits[4:7]
    second_part = digits[7:9]
    last_part = digits[9:]

    formatted_number = f"8 {country_code} {first_part} {second_part}-{last_part}"
    return formatted_number

async def test_state_4(message: Message, state: FSMContext):
    try:
        children_phone = message.text.strip()

        phone_pattern = re.compile(r'^\d{11}$')
        match_result = phone_pattern.match(children_phone)
        if match_result is None:
            await message.answer('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ 81234567890')
            return

        formatted_phone = '+7 ' + children_phone[1:4] + ' ' + children_phone[4:7] + ' ' + children_phone[7:9] + '-' + children_phone[9:11]

        await message.answer('–ì–æ—Ç–æ–≤–æüëå, –≤—ã –ø—Ä–æ—à–ª–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é, —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ <b>—Ç–µ—Å—Ç</b>\n'
                             '–ß—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ <b>—Ç–µ–±–µ</b>', reply_markup=character_test_kb)
        await insert_table_data(user_id, user_name, children_name, children_surname, children_patronymic, children_year, formatted_phone, children_room_number)
    except:
        await message.answer('–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–ª–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üò°')
        await state.clear()

async def character_test_call(call: CallbackQuery, state: FSMContext):
    await call.answer('')
    result = await read_us_id_user_table(call.from_user.id)

    if result == False:
        await call.message.answer('–¢—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã —Ç–∞–∫–∏–º–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–∞–∫:\n'
                                  '<code>1 (–î–∞)</code>\n'
                                  '<code>2 (–ù–µ—Ç)</code>\n'
                                  '–¢—ã –¥–æ–ª–∂–µ–Ω(–∞) –æ—Ç–≤–µ—Ç–∏—Ç—å —Ü–∏—Ñ—Ä–∞–º–∏')
        time.sleep(1)
        await call.message.answer('–Ø –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–π(–∞—è) –∏ —É–ø–æ—Ä–Ω—ã–π (—É–ø–æ—Ä–Ω–∞—è)')
        await state.set_state(Form.character_test_1)
    if result == True:
        await call.message.answer('–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ —Ç–µ—Å—Ç')

async def character_test_1(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø –ø–ª–∞–Ω–∏—Ä—É—é –º–æ–∏ –¥–µ–ª–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ')
        await state.set_state(Form.character_test_2)
    elif message.text.strip() == "31":
        test_points_probably_yes += 1
        await message.answer('–Ø –ø–ª–∞–Ω–∏—Ä—É—é –º–æ–∏ –¥–µ–ª–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ')
        await state.set_state(Form.character_test_2)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø –ø–ª–∞–Ω–∏—Ä—É—é –º–æ–∏ –¥–µ–ª–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ')
        await state.set_state(Form.character_test_2)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_2(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø —É–º–µ—é –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å—Ç—Ä–∞—Ö')
        await state.set_state(Form.character_test_3)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø —É–º–µ—é –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å—Ç—Ä–∞—Ö')
        await state.set_state(Form.character_test_3)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø —É–º–µ—é –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å—Ç—Ä–∞—Ö')
        await state.set_state(Form.character_test_3)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_3(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–î–∞–∂–µ –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ç—Ä—É–¥–Ω–∞—è, —è —Å—Ç–∞—Ä–∞—é—Å—å –Ω–µ —Å–¥–∞–≤–∞—Ç—å—Å—è –∏ –ø—Ä–æ–±—É—é –µ–µ —Ä–µ—à–∏—Ç—å')
        await state.set_state(Form.character_test_4)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–î–∞–∂–µ –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ç—Ä—É–¥–Ω–∞—è, —è —Å—Ç–∞—Ä–∞—é—Å—å –Ω–µ —Å–¥–∞–≤–∞—Ç—å—Å—è –∏ –ø—Ä–æ–±—É—é –µ–µ —Ä–µ—à–∏—Ç—å')
        await state.set_state(Form.character_test_4)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–î–∞–∂–µ –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ç—Ä—É–¥–Ω–∞—è, —è —Å—Ç–∞—Ä–∞—é—Å—å –Ω–µ —Å–¥–∞–≤–∞—Ç—å—Å—è –∏ –ø—Ä–æ–±—É—é –µ–µ —Ä–µ—à–∏—Ç—å')
        await state.set_state(Form.character_test_4)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_4(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–ú–æ–∏ –∑–Ω–∞–∫–æ–º—ã–µ —Å—á–∏—Ç–∞—é—Ç –º–µ–Ω—è –Ω–∞–¥–µ–∂–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º')
        await state.set_state(Form.character_test_5)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–ú–æ–∏ –∑–Ω–∞–∫–æ–º—ã–µ —Å—á–∏—Ç–∞—é—Ç –º–µ–Ω—è –Ω–∞–¥–µ–∂–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º')
        await state.set_state(Form.character_test_5)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–ú–æ–∏ –∑–Ω–∞–∫–æ–º—ã–µ —Å—á–∏—Ç–∞—é—Ç –º–µ–Ω—è –Ω–∞–¥–µ–∂–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º')
        await state.set_state(Form.character_test_5)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_5(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–º—É –¥–µ–ª—É, –µ—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª(–∞) –ø—Ä–µ–¥—ã–¥—É—â–µ–µ')
        await state.set_state(Form.character_test_6)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–º—É –¥–µ–ª—É, –µ—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª(–∞) –ø—Ä–µ–¥—ã–¥—É—â–µ–µ')
        await state.set_state(Form.character_test_6)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–æ–º—É –¥–µ–ª—É, –µ—Å–ª–∏ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª(–∞) –ø—Ä–µ–¥—ã–¥—É—â–µ–µ')
        await state.set_state(Form.character_test_6)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_6(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤—É –ª—é–¥–µ–π —è –Ω—Ä–∞–≤–ª—é—Å—å')
        await state.set_state(Form.character_test_7)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤—É –ª—é–¥–µ–π —è –Ω—Ä–∞–≤–ª—é—Å—å')
        await state.set_state(Form.character_test_7)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤—É –ª—é–¥–µ–π —è –Ω—Ä–∞–≤–ª—é—Å—å')
        await state.set_state(Form.character_test_7)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_7(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø –ø—Ä–∏—è—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫')
        await state.set_state(Form.character_test_8)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø –ø—Ä–∏—è—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫')
        await state.set_state(Form.character_test_8)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø –ø—Ä–∏—è—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫')
        await state.set_state(Form.character_test_8)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_8(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–î—Ä—É–≥–∏–º —Å–æ –º–Ω–æ–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ')
        await state.set_state(Form.character_test_9)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–î—Ä—É–≥–∏–º —Å–æ –º–Ω–æ–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ')
        await state.set_state(Form.character_test_9)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–î—Ä—É–≥–∏–º —Å–æ –º–Ω–æ–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ')
        await state.set_state(Form.character_test_9)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_9(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–£ –º–µ–Ω—è –º–Ω–æ–≥–æ –¥—Ä—É–∑–µ–π')
        await state.set_state(Form.character_test_10)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–£ –º–µ–Ω—è –º–Ω–æ–≥–æ –¥—Ä—É–∑–µ–π')
        await state.set_state(Form.character_test_10)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–£ –º–µ–Ω—è –º–Ω–æ–≥–æ –¥—Ä—É–∑–µ–π')
        await state.set_state(Form.character_test_10)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_10(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–£ –º–µ–Ω—è –µ—Å—Ç—å –±–ª–∏–∑–∫–∏–µ –¥—Ä—É–∑—å—è')
        await state.set_state(Form.character_test_11)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–£ –º–µ–Ω—è –µ—Å—Ç—å –±–ª–∏–∑–∫–∏–µ –¥—Ä—É–∑—å—è')
        await state.set_state(Form.character_test_11)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–£ –º–µ–Ω—è –µ—Å—Ç—å –±–ª–∏–∑–∫–∏–µ –¥—Ä—É–∑—å—è')
        await state.set_state(Form.character_test_11)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_11(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –∑–∞—Ä—è–∂–µ–Ω —ç–Ω–µ—Ä–≥–∏–µ–π')
        await state.set_state(Form.character_test_12)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –∑–∞—Ä—è–∂–µ–Ω —ç–Ω–µ—Ä–≥–∏–µ–π')
        await state.set_state(Form.character_test_12)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø —á—É–≤—Å—Ç–≤—É—é, —á—Ç–æ –∑–∞—Ä—è–∂–µ–Ω —ç–Ω–µ—Ä–≥–∏–µ–π')
        await state.set_state(Form.character_test_12)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_12(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ä–µ—à–∏–º–æ—Å—Ç–∏')
        await state.set_state(Form.character_test_13)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ä–µ—à–∏–º–æ—Å—Ç–∏')
        await state.set_state(Form.character_test_13)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ä–µ—à–∏–º–æ—Å—Ç–∏')
        await state.set_state(Form.character_test_13)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_13(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –±–æ–¥—Ä –∏ –≥–æ—Ç–æ–≤ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å')
        await state.set_state(Form.character_test_14)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –±–æ–¥—Ä –∏ –≥–æ—Ç–æ–≤ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å')
        await state.set_state(Form.character_test_14)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –±–æ–¥—Ä –∏ –≥–æ—Ç–æ–≤ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å')
        await state.set_state(Form.character_test_14)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_14(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–ú–Ω–µ –µ—Å—Ç—å –Ω–∞ –∫–æ–≥–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è')
        await state.set_state(Form.character_test_15)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–ú–Ω–µ –µ—Å—Ç—å –Ω–∞ –∫–æ–≥–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è')
        await state.set_state(Form.character_test_15)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–ú–Ω–µ –µ—Å—Ç—å –Ω–∞ –∫–æ–≥–æ –ø–æ–ª–æ–∂–∏—Ç—å—Å—è')
        await state.set_state(Form.character_test_15)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_15(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø –ª—é–±–ª—é –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º')
        await state.set_state(Form.character_test_16)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø –ª—é–±–ª—é –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º')
        await state.set_state(Form.character_test_16)
    elif message.text.strip() == "1":
        test_points_no += 1
        await message.answer('–Ø –ª—é–±–ª—é –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ–º')
        await state.set_state(Form.character_test_16)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_16(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–Ø - —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π —á–µ–ª–æ–≤–µ–∫')
        await state.set_state(Form.character_test_17)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–Ø - —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π —á–µ–ª–æ–≤–µ–∫')
        await state.set_state(Form.character_test_17)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–Ø - —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π —á–µ–ª–æ–≤–µ–∫')
        await state.set_state(Form.character_test_17)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_17(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–£ –º–µ–Ω—è –≤—Å–µ–≥–¥–∞ –º–Ω–æ–≥–æ –∏–¥–µ–π')
        await state.set_state(Form.character_test_18)
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–£ –º–µ–Ω—è –≤—Å–µ–≥–¥–∞ –º–Ω–æ–≥–æ –∏–¥–µ–π')
        await state.set_state(Form.character_test_18)
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–£ –º–µ–Ω—è –≤—Å–µ–≥–¥–∞ –º–Ω–æ–≥–æ –∏–¥–µ–π')
        await state.set_state(Form.character_test_18)
    else:
        await message.answer('–í–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 2')

async def character_test_18(message: Message, state: FSMContext):
    global test_points_probably_yes, test_points_yes, test_points_no
    random = randint(1, 6)
    us_id = message.from_user.id
    if message.text.strip() == "1":
        test_points_yes += 1
        await message.answer('–ò —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂...')
        time.sleep(2)
        if random == 1:
            await message.answer('''‚úä<b>–°–≤–µ—Ä—à–∏—Ç–µ–ª—å</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</b> —Ä–∞—Å–∫—Ä–µ–ø–æ—â–µ–Ω–∏–µ, —Å–º–µ–ª–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>

-–ü–æ–±–µ–∂–¥–∞–µ—Ç –ø—É—Å—Ç–æ—Ç—ã –ø—Ä–∏ —Ä–∞–≤–µ–Ω—Å–∏–≤–µ —Å–∏–ª.
-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞).  

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã-–Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–°–≤–µ—Ä—à–∏—Ç–µ–ª—å')
        elif random == 2:
            await message.answer('''ü´¥<b>–ò–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>   –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø—Ä–æ—Ç–∏–≤ –∑–ª—ã—Ö –¥—É—Ö–æ–≤. (–ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö —Å–æ–∫—Ä–æ–≤–∏—â)

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞). 

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–ò–Ω—Ç–µ–ª–ª–µ–≥–Ω—Ç')
        elif random == 3:
            await message.answer('''üôå<b>–¢–µ–ª–µ–ø–∞—Ç</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b> –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b> 
-–û–±–ª–∞–¥–∞–µ—Ç –≥–∏–ø–Ω–æ–∑–æ–º. –ï—Å–ª–∏ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∫–æ–ª—å—Ü–æ, —Ç–æ –º–æ–∂–µ—Ç –∑–∞–≥–∏–ø–Ω–æ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–ª—ã—Ö –¥—É—Ö–æ–≤ –∏ –∑–∞–±—Ä–∞—Ç—å —Å–æ–∫—Ä–æ–≤–∏—â–∞. 

- –ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b> 
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–¢–µ–ª–µ–ø–∞—Ç')
        elif random == 4:
            await message.answer('''ü§ù<b>–î—Ä—É–≥</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –æ–±—â–µ–Ω–∏–µ

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  
-–ú–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–π –Ω–∞–≤—ã–∫ —É –¥—Ä—É–≥–∏—Ö.

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞) 


‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–î—Ä—É–≥')
        elif random == 5:
            await message.answer('''üëå<b>–î–µ—è—Ç–µ–ª—å</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –°–∏–ª–∞ –¥—É—Ö–∞, —ç–Ω–µ—Ä–≥–∏—è

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∑–ª–æ–≥–æ –¥—É—Ö–∞ –ª—é–±—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞.  –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–≤ –æ–¥–Ω–æ —Å–æ–∫—Ä–æ–≤–∏—â–µ- –ø–æ–±–µ–∂–¥–∞–µ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–î–µ—è—Ç–µ–ª—å')
        elif random == 6:
            await message.answer('''ü§ü<b>–í–∏—Ä—Ç—É–æ–∑</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–û–±–ª–∞–¥–∞–µ—Ç –≤–æ–ª—à–µ–±–Ω–æ–π –ø—ã–ª—å—Ü–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫—Ä—ã—Ç—å—Å—è –æ—Ç –ø—É—Å—Ç–æ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–í–∏—Ä—Ç—É–æ–∑')
        await state.clear()
    elif message.text.strip() == "–°–∫–æ—Ä–µ–µ –¥–∞":
        test_points_probably_yes += 1
        await message.answer('–ò —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂...')
        time.sleep(2)
        if random == 1:
            await message.answer('''‚úä<b>–°–≤–µ—Ä—à–∏—Ç–µ–ª—å</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</b> —Ä–∞—Å–∫—Ä–µ–ø–æ—â–µ–Ω–∏–µ, —Å–º–µ–ª–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>

-–ü–æ–±–µ–∂–¥–∞–µ—Ç –ø—É—Å—Ç–æ—Ç—ã –ø—Ä–∏ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ —Å–∏–ª.
-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞).  

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–°–≤–µ—Ä—à–∏—Ç–µ–ª—å')
        elif random == 2:
            await message.answer('''ü´¥<b>–ò–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>   –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø—Ä–æ—Ç–∏–≤ –∑–ª—ã—Ö –¥—É—Ö–æ–≤. (–ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö —Å–æ–∫—Ä–æ–≤–∏—â)

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞). 

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–ò–Ω—Ç–µ–ª–ª–µ–≥–Ω—Ç')
        elif random == 3:
            await message.answer('''üôå<b>–¢–µ–ª–µ–ø–∞—Ç</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b> –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b> 
-–û–±–ª–∞–¥–∞–µ—Ç –≥–∏–ø–Ω–æ–∑–æ–º. –ï—Å–ª–∏ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∫–æ–ª—å—Ü–æ, —Ç–æ –º–æ–∂–µ—Ç –∑–∞–≥–∏–ø–Ω–æ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–ª—ã—Ö –¥—É—Ö–æ–≤ –∏ –∑–∞–±—Ä–∞—Ç—å —Å–æ–∫—Ä–æ–≤–∏—â–∞. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b> 
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–¢–µ–ª–µ–ø–∞—Ç')
        elif random == 4:
            await message.answer('''ü§ù<b>–î—Ä—É–≥</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –æ–±—â–µ–Ω–∏–µ

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  
-–ú–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–π –Ω–∞–≤—ã–∫ —É –¥—Ä—É–≥–∏—Ö.

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞) 


‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–î—Ä—É–≥')
        elif random == 5:
            await message.answer('''üëå<b>–î–µ—è—Ç–µ–ª—å</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –°–∏–ª–∞ –¥—É—Ö–∞, —ç–Ω–µ—Ä–≥–∏—è

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∑–ª–æ–≥–æ –¥—É—Ö–∞ –ª—é–±—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞.  –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–≤ –æ–¥–Ω–æ —Å–æ–∫—Ä–æ–≤–∏—â–µ - –ø–æ–±–µ–∂–¥–∞–µ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–î–µ—è—Ç–µ–ª—å')
        elif random == 6:
            await message.answer('''ü§ü<b>–í–∏—Ä—Ç—É–æ–∑</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–û–±–ª–∞–¥–∞–µ—Ç –≤–æ–ª—à–µ–±–Ω–æ–π –ø—ã–ª—å—Ü–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫—Ä—ã—Ç—å—Å—è –æ—Ç –ø—É—Å—Ç–æ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–í–∏—Ä—Ç—É–æ–∑')
        await state.clear()
    elif message.text.strip() == "2":
        test_points_no += 1
        await message.answer('–ò —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–∂...')
        time.sleep(2)
        if random == 1:
            await message.answer('''‚úä<b>–°–≤–µ—Ä—à–∏—Ç–µ–ª—å</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</b> —Ä–∞—Å–∫—Ä–µ–ø–æ—â–µ–Ω–∏–µ, —Å–º–µ–ª–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>

-–ü–æ–±–µ–∂–¥–∞–µ—Ç –ø—É—Å—Ç–æ—Ç—ã –ø—Ä–∏ —Ä–∞–≤–µ–Ω—Å–∏–≤–µ —Å–∏–ª.
-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞).  

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–°–≤–µ—Ä—à–∏—Ç–µ–ª—å')
        elif random == 2:
            await message.answer('''ü´¥<b>–ò–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>   –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø—Ä–æ—Ç–∏–≤ –∑–ª—ã—Ö –¥—É—Ö–æ–≤. (–ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö —Å–æ–∫—Ä–æ–≤–∏—â)

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞). 

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–ò–Ω—Ç–µ–ª–ª–µ–≥–Ω—Ç')
        elif random == 3:
            await message.answer('''üôå<b>–¢–µ–ª–µ–ø–∞—Ç</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b> –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b> 
-–û–±–ª–∞–¥–∞–µ—Ç –≥–∏–ø–Ω–æ–∑–æ–º. –ï—Å–ª–∏ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∫–æ–ª—å—Ü–æ, —Ç–æ –º–æ–∂–µ—Ç –∑–∞–≥–∏–ø–Ω–æ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–ª—ã—Ö –¥—É—Ö–æ–≤ –∏ –∑–∞–±—Ä–∞—Ç—å —Å–æ–∫—Ä–æ–≤–∏—â–∞. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b> 
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–¢–µ–ª–µ–ø–∞—Ç')
        elif random == 4:
            await message.answer('''ü§ù<b>–î—Ä—É–≥</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –æ–±—â–µ–Ω–∏–µ

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  
-–ú–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–π –Ω–∞–≤—ã–∫ —É –¥—Ä—É–≥–∏—Ö.

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞) 


‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–î—Ä—É–≥')
        elif random == 5:
            await message.answer('''üëå<b>–î–µ—è—Ç–µ–ª—å</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –°–∏–ª–∞ –¥—É—Ö–∞, —ç–Ω–µ—Ä–≥–∏—è

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∑–ª–æ–≥–æ –¥—É—Ö–∞ –ª—é–±—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞.  –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–≤ –æ–¥–Ω–æ —Å–æ–∫—Ä–æ–≤–∏—â–µ - –ø–æ–±–µ–∂–¥–∞–µ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–î–µ—è—Ç–µ–ª—å')
        elif random == 6:
            await message.answer('''ü§ü<b>–í–∏—Ä—Ç—É–æ–∑</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–û–±–ª–∞–¥–∞–µ—Ç –≤–æ–ª—à–µ–±–Ω–æ–π –ø—ã–ª—å—Ü–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫—Ä—ã—Ç—å—Å—è –æ—Ç –ø—É—Å—Ç–æ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''')
            await insert_children_character(us_id, '–í–∏—Ä—Ç—É–æ–∑')
        await state.clear()

async def what_scoring(call: CallbackQuery):
    await call.answer('')
    await call.message.answer('<b>–ó–∞ —á—Ç–æ –Ω–∞—á–∏—Å–ª—è—é—Ç—è –Ω–∞–≤—ã–∫–∏</b>\n\n'
                              '–õ–∏—á–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n'
                              '–ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –Ω–∞ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å–∞—Ö, —É–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é\n'
                              '–°–∫—Ä—ã—Ç—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è\n'
                              '–ß–∏—Å—Ç–æ—Ç–∞ –≤ –Ω–æ–º–µ—Ä–µ\n'
                              '–ü–æ–º–æ—â—å –ú–∞—ç—Å—Ç—Ä–æ\n'
                              '–ó–∞—Ä—è–¥–∫–∞. –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∑–∞—Ä—è–¥–∫–∏\n'
                              '–ü—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å\n'
                              '–°—é—Ä–ø—Ä–∏–∑—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É\n'
                              '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å\n'
                              '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ, –∑–∞—Ä—è–¥ –ø–æ–∑–∏—Ç–∏–≤–∞\n'
                              '–ü–æ–±–µ–¥–∞ –Ω–∞–¥ –ø—É—Å—Ç–æ—Ç–∞–º–∏', reply_markup=return_kb)

async def what_scoring_remove(call: CallbackQuery):
    await call.answer('')
    await call.message.answer('<b>–ó–∞ —á—Ç–æ –º–æ–≥—É—Ç –∑–∞–±–∞—Ä—Ç—å –Ω–∞–≤—ã–∫–∏</b>\n\n'
                              '–û–ø–æ–∑–¥–∞–Ω–∏—è\n'
                              '–•—É–ª–∏–≥–∞–Ω—Å—Ç–≤–æ\n' 
                              '–ù–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞—è –±—Ä–∞–Ω—å\n'
                              '–ì—Ä—è–∑–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã\n'
                              '–ü—Ä–æ–ø—É—Å–∫ –∑–∞—Ä—è–¥–∫–∏\n'
                              '–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –í—Å–µ–ª–µ–Ω–Ω–æ–π\n'
                              '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ –ü—É—Å—Ç–æ—Ç', reply_markup=return_kb)

async def universe_rules(call: CallbackQuery):
    await call.answer('')
    await call.message.answer('<b>–ü—Ä–∞–≤–∏–ª–∞ –í—Å–µ–ª–µ–Ω–Ω–æ–π –ê–†–¢-V</b>\n\n'
'''1. –ù–µ –Ω–∞–≤—Ä–µ–¥–∏ 
–ù–∏ —Å–ª–æ–≤–æ–º, –Ω–∏ –ø–æ—Å—Ç—É–ø–∫–æ–º. –ù–∏ —Å–µ–±–µ, –Ω–∏ –±–ª–∏–∂–Ω–µ–º—É —Å–≤–æ–µ–º—É.) –ù–∞ –ª—é–±–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏, –¥–µ–ª–µ, –ø—Ä–∏–µ–º–µ –ø–∏—â–∏, 24/7 –º—ã –≤ –æ—Ç–≤–µ—Ç–µ –∑–∞ —Å–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è –∏ –ø–æ—Å—Ç—É–ø–∫–∏ –∫–∞–∫ –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π, —Ç–∞–∫ –∏ –ø–µ—Ä–µ–¥ –æ–∫—Ä—É–∂–∞—é—â–∏–º–∏. –ò–º—É—â–µ—Å—Ç–≤–æ –≤—Å–µ–ª–µ–Ω–Ω–æ–π –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–≤, —Ç–æ–∂–µ –≤—Ö–æ–¥–∏—Ç —Å—é–¥–∞.  

2. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–π 
–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–∞—à–µ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π —Å–≤–æ–±–æ–¥–Ω–æ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.
 –ù–æ –µ—Å–ª–∏ —Ç—ã —Ä–µ—à–∏–ª –æ—Ç–ª—É—á–∏—Ç—å—Å—è –∫—É–¥–∞-–ª–∏–±–æ –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –±–∞–∑—ã —Å–æ–æ–±—â–∏ –ª—é–±–æ–º—É –º–∞—ç—Å—Ç—Ä–æ. –°–∞–º–æ–≤–æ–ª—å–Ω–æ–µ –ø–æ–∫–∏–¥–∞–Ω–∏–µ –±–∞–∑—ã –Ω–µ—Å–µ—Ç –∑–∞ —Å–æ–±–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤–ø–ª–æ—Ç—å –¥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.  

3. –ì–æ–≤–æ—Ä–∏ 
–¢—ã –º–æ–∂–µ—à—å —Å–ø–æ–∫–æ–π–Ω–æ –≤—ã—Ä–∞–∂–∞—Ç—å —Å–≤–æ–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–µ –º–Ω–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —è–∑—ã–∫–∞—Ö. –õ—é–±—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ä–µ—à–∞—é—Ç—Å—è –ø—É—Ç–µ–º –º–∏—Ä–Ω—ã—Ö –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–æ–≤. –î–∞–≤–∞–π –Ω–µ –∑–∞—Ö–ª–∞–º–ª—è—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –±—Ä–∞–Ω—å—é, –∑–∞ —ç—Ç–∏–º —Å–ª–µ–¥—É–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∏ —Å–∞–Ω–∫—Ü–∏–∏. 

4. –ó–¥–æ—Ä–æ–≤—å–µ 
–°–†–ê–ó–£! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–æ–±—â–∏—Ç—å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫—É –æ –ø–ª–æ—Ö–æ–º —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ, –∏–ª–∏ —Ç—Ä–∞–≤–º–µ. –ù–∞ –±–∞–∑–µ –µ—Å—Ç—å –≤—Ä–∞—á, –º—ã –æ–±—è–∑–∞–Ω—ã –±—É–¥–µ–º –æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—É—é –ø–æ–º–æ—â—å! 

5. –ö—É–ø–∞–Ω–∏–µ
–ú—ã –∫—É–ø–∞–µ–º—Å—è –≤ –≤–æ–¥–æ–µ–º–µ –ø–æ 15 –º–∏–Ω—É—Ç, —Å –ø–µ—Ä–µ—Ä—ã–≤–æ–º. –ï—Å–ª–∏ –Ω–∞–º –º–∞–ª–æ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –±—É–¥–µ—Ç, —Ç–æ –≤–º–µ—Å—Ç–µ –±—É–¥–µ–º –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ —ç—Ç–æ. –°–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–µ –∫—É–ø–∞–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ. 

6. –†–∞—Å–ø–æ—Ä—è–¥–æ–∫ 
–ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ –º—ã –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ–º –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å, –∏ –≤—ã–≤–µ—à–∏–≤–∞–µ–º –µ–≥–æ. –ú—ã —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –ø—Ä–∏—Ö–æ–¥–∏–º –Ω–∞ —Ç–µ –∏–ª–∏ –∏–Ω—ã–µ –¥–µ–ª–∞, –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏. –£ –Ω–∞—Å –µ—Å—Ç—å —Ç–∏—Ö–æ–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –Ω–∞–º –ø–æ–∑–≤–æ–ª–µ–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –¥–µ–ª–∞–º–∏, –≤ —ç—Ç–æ—Ç —á–∞—Å –∑–∞–ø—Ä–µ—â–µ–Ω–æ —à—É–º–µ—Ç—å, —ç—Ç–æ –ø–æ—Å–≤—è—â–µ–Ω–æ –æ–±—â–µ–º—É –æ—Ç–¥—ã—Ö—É. 

7. –ï–¥–∞
–¢—ã ‚Äì —Ç–æ —á—Ç–æ —Ç—ã –µ—à—å. –ú–æ–∂–Ω–æ –¥–∞–∂–µ –ø—Ä–æ—Å–∏—Ç—å –¥–æ–±–∞–≤–∫—É. –ù–æ, –≤—Ö–æ–¥ –≤ –±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è —Ç–æ–ª—å–∫–æ –ø–æ –≥—Ä–∞—Ñ–∏–∫—É –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏. –ù–µ –ø–æ–µ–ª ‚Äì –ø–ª–æ—Ö–æ –æ—Ç–∫–∞—Ç–∞–ª, –∑–∞–ø–æ–≤–µ–¥—å —Ä–∞–π–¥–µ—Ä–∞.

8. –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ 
–° —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ –≤–Ω–µ –Ω–∞—à–µ–π –≤—Å–µ–ª–µ–Ω–Ω–æ–π –º—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ–º –º–∏—Ä–Ω–æ. –ï—Å–ª–∏ —É –≤–∞—Å, —Ç–æ –∏–ª–∏ –∏–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ –∏–ª–∏ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –≤ –∫–∞–∫–æ–π-–ª–∏–±–æ –∞—É–¥–∏—Ç–æ—Ä–∏–∏, –∞ –æ–Ω–∞ –∑–∞–Ω—è—Ç–∞, —Ç–æ —Å–ø–æ–∫–æ–π–Ω–æ –∏ –≤–µ–∂–ª–∏–≤–æ —É—Ç–æ—á–Ω—è–µ–º –ø–æ –∫–∞–∫–æ–π –ø—Ä–∏—á–∏–Ω–µ –∏ —Å–æ–æ–±—â–∞–µ–º –º–∞—ç—Å—Ç—Ä–æ. 

9. –¢–µ–ª–µ—Ñ–æ–Ω 
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–µ –°–í–û–ë–û–î–ù–û–ï –≤—Ä–µ–º—è. –û—Ç–±–æ–π –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è —Å–≤–æ–±–æ–¥–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º, –ø–æ—Å–ª–µ –Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∑–∞–ø—Ä–µ—â–µ–Ω–æ. –ü–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–∞ –≤—Ä–µ–º—è –æ—Ç–±–æ—è —Ç–µ–ª–µ—Ñ–æ–Ω –±—É–¥–µ—Ç —Å–¥–∞–≤–∞—Ç—å—Å—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫—É. –ë—Ä–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –≤ –∫–∞—Ç–µ—Ä —Ä–∞–∑—Ä–µ—à–µ–Ω–æ. –í—Å–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã –ø–æ–¥ –ª–∏—á–Ω–æ–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é –≤–ª–∞–¥–µ–ª—å—Ü–∞. 

10. –ö–æ–º–Ω–∞—Ç—ã
–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —á–∏—Å—Ç–æ—Ç–µ. –ü–æ—Å–ª–µ –ø–æ–¥—ä–µ–º–∞ –∑–∞–ø—Ä–∞–≤–∏—Ç—å –∫—Ä–æ–≤–∞—Ç—å –∏ —É–±—Ä–∞—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –≤—Å–µ–º–∏ –ø—Ä–æ–∂–∏–≤–∞—é—â–∏–º–∏ –≤ —ç—Ç–æ–π –∫–æ–º–Ω–∞—Ç–µ. –ë—É–¥—É—Ç —Ä–µ–≤–∏–∑–æ—Ä—Ä–æ. –ö–ª—é—á–∏ –æ—Ç –∫–æ–º–Ω–∞—Ç –Ω–µ —Ç–µ—Ä—è—Ç—å. 
–ü–æ–¥ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é —É –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è –≥–¥–µ –≤—ã –∏—Ö —Ö—Ä–∞–Ω–∏—Ç–µ —Å–æ —Å–≤–æ–∏–º —Å–æ—Å–µ–¥–æ–º. 

11. –ú–∞—ç—Å—Ç—Ä–æ
–í–æ –≤—Å–µ–ª–µ–Ω–Ω–æ–π –µ—Å—Ç—å –º–∞—ç—Å—Ç—Ä–æ. –û–Ω–∏ —Ç—Ä–∞–Ω—Å–ª–∏—Ä—É—é—Ç —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è —Ç–µ–±–µ, –ø–æ—ç—Ç–æ–º—É —Ç–æ–ª—å–∫–æ –æ—Ç —Ç–µ–±—è –∑–∞–≤–∏—Å–∏—Ç –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã –≥–æ—Ç–æ–≤ –≤–ø–∏—Ç–∞—Ç—å –≤ —Å–µ–±—è –∏—Ö. –ú–∞—ç—Å—Ç—Ä–æ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ –ø–æ-–¥—Ä—É–≥–æ–º—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Ç–≤–æ—é –∫–æ–º–Ω–∞—Ç—É, –Ω–∞ —Ç–æ, –∫–∞–∫ —Ç—ã –ø–∏—Ç–∞–µ—à—å—Å—è, –Ω–∞ —Ç–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ. –ü—Ä–∏—Å–ª—É—à–∞–π—Å—è!

12. –°–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è, —Ç–∏—Ö–æ–µ –≤—Ä–µ–º—è
–í —ç—Ç–æ –≤—Ä–µ–º—è –æ—Ç –∑–∞–Ω—è—Ç–∏–π –≤—ã –º–æ–∂–µ—Ç–µ –≥—É–ª—è—Ç—å –ø–æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Å–æ —Å–≤–æ–∏–º–∏ –¥—Ä—É–∑—å—è–º–∏ –∏–ª–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –Ω–æ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å –º–∞—ç—Å—Ç—Ä–æ –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –æ–±—â–∏–π —á–∞—Ç! üì≤
–ó–∞ —Å–∞–º–æ–≤–æ–ª—å–Ω–æ–µ –ø–æ–∫–∏–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ –≤ —Ç–∏—Ö–æ–µ –≤—Ä–µ–º—è, –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è —Å–ª–µ–¥—É—é—Ç —Å–∞–Ω–∫—Ü–∏–∏!''')

async def my_points(call: CallbackQuery):
    await call.answer('')
    children_points = await read_points(call.from_user.id)
    children_points = children_points[0]
    await call.message.answer(f'<b>–¢–≤–æ–∏ –Ω–∞–≤—ã–∫–∏:</b>\n\n'
                              f'–û–±—â–µ–Ω–∏–µ: {children_points[7]}\n'
                              f'–û—Ç—Ä–∫—ã—Ç–æ—Å—Ç—å: {children_points[8]}\n'
                              f'–†–∞—Å–∫—Ä–µ–ø–æ—â–µ–Ω–∏–µ: {children_points[9]}\n'
                              f'–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {children_points[10]}\n'
                              f'–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å: {children_points[11]}\n'
                              f'–°–∏–ª–∞ –¥—É—Ö–∞: {children_points[13]}\n'
                              f'–≠–Ω–µ—Ä–≥–∏—è: {children_points[14]}\n'
                              f'–ü—É–Ω–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å: {children_points[15]}', reply_markup=return_kb)

async def my_character(call: CallbackQuery):
    await call.answer('')
    children_characters = await read_points(call.from_user.id)
    children_characters = children_characters[0][6]

    if children_characters == '–°–≤–µ—Ä—à–∏—Ç–µ–ª—å':
        await call.message.answer('''‚úä<b>–°–≤–µ—Ä—à–∏—Ç–µ–ª—å</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</b> —Ä–∞—Å–∫—Ä–µ–ø–æ—â–µ–Ω–∏–µ, —Å–º–µ–ª–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>

-–ü–æ–±–µ–∂–¥–∞–µ—Ç –ø—É—Å—Ç–æ—Ç—ã –ø—Ä–∏ —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ —Å–∏–ª.
-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞).  

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''', reply_markup=return_kb)

    elif children_characters == '–ò–Ω—Ç–µ–ª–ª–µ–≥–Ω—Ç':
        await call.message.answer('''ü´¥<b>–ò–Ω—Ç–µ–ª–ª–∏–≥–µ–Ω—Ç</b> 

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>   –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤–æ–ª—à–µ–±–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø—Ä–æ—Ç–∏–≤ –∑–ª—ã—Ö –¥—É—Ö–æ–≤. (–ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö —Å–æ–∫—Ä–æ–≤–∏—â)

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞). 

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''', reply_markup=return_kb)

    elif children_characters == '–¢–µ–ª–µ–ø–∞—Ç':
        await call.message.answer('''üôå<b>–¢–µ–ª–µ–ø–∞—Ç</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b> –¥–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å.

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b> 
-–û–±–ª–∞–¥–∞–µ—Ç –≥–∏–ø–Ω–æ–∑–æ–º. –ï—Å–ª–∏ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –∫–æ–ª—å—Ü–æ, —Ç–æ –º–æ–∂–µ—Ç –∑–∞–≥–∏–ø–Ω–æ—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–ª—ã—Ö –¥—É—Ö–æ–≤ –∏ –∑–∞–±—Ä–∞—Ç—å —Å–æ–∫—Ä–æ–≤–∏—â–∞. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b> 
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b> 
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''', reply_markup=return_kb)

    elif children_characters == '–î—Ä—É–≥':
        await call.message.answer('''ü§ù<b>–î—Ä—É–≥</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –æ–±—â–µ–Ω–∏–µ

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  
-–ú–æ–∂–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ—Ç–µ—Ä—è–Ω–Ω—ã–π –Ω–∞–≤—ã–∫ —É –¥—Ä—É–≥–∏—Ö.

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞) 


‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''', reply_markup=return_kb)

    elif children_characters == '–î–µ—è—Ç–µ–ª—å':
        await call.message.answer('''üëå<b>–î–µ—è—Ç–µ–ª—å</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –°–∏–ª–∞ –¥—É—Ö–∞, —ç–Ω–µ—Ä–≥–∏—è

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–ú–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ç–∏–≤ –∑–ª–æ–≥–æ –¥—É—Ö–∞ –ª—é–±—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞.  –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–≤ –æ–¥–Ω–æ —Å–æ–∫—Ä–æ–≤–∏—â–µ- –ø–æ–±–µ–∂–¥–∞–µ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''', reply_markup=return_kb)

    elif children_characters == '–í–∏—Ä—Ç—É–æ–∑':
        await call.message.answer('''ü§ü<b>–í–∏—Ä—Ç—É–æ–∑</b>  

‚ö°Ô∏è<b>–û—Å–Ω–æ–≤–Ω–æ–π –Ω–∞–≤—ã–∫:</b>  –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å

ü™Ñ<b>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞:</b>  

-–û–±–ª–∞–¥–∞–µ—Ç –≤–æ–ª—à–µ–±–Ω–æ–π –ø—ã–ª—å—Ü–æ–π, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–∫—Ä—ã—Ç—å—Å—è –æ—Ç –ø—É—Å—Ç–æ—Ç. 

-–ú–æ–∂–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ä–∏—Å—É–Ω–∫–∞–º–∏ –Ω–∞ —â–∏—Ç–µ (—Ñ—É—Ç–±–æ–ª–∫–∞)

‚ùóÔ∏è<b>–ü—Ä–æ —â–∏—Ç:</b>  
–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤—ã–¥–∞–µ—Ç—Å—è —â–∏—Ç, —á—Ç–æ–±—ã –Ω–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–∞ –Ω–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã - –Ω—É–∂–Ω–æ –ü–û–ë–ï–î–ò–¢–¨ –ø—É—Å—Ç–æ—Ç—ã –∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â–∞  

<b>–°–í–û–ô–°–¢–í–ê –©–ò–¢–ê:</b>  
–©–∏—Ç —Å —Ä–∏—Å—É–Ω–∫–∞–º–∏ –¥–∞–µ—Ç + 3 –ª—é–±—ã—Ö –Ω–∞–≤—ã–∫–∞ –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏ ‚úÖ''', reply_markup=return_kb)

async def main_menu_call(call: CallbackQuery):
    await call.answer('')
    await call.message.answer('<b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>', reply_markup=main_menu_kb)
